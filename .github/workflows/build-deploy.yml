name: Build, Test & Deploy [Client]
on:
  push:
    branches:
      - client
  pull_request:
    branches:
      - client
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: c-hive/gha-yarn-cache@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: "yarn"

      - name: Cache .next/cache
        uses: actions/cache@v2
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: Install NPM packages
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run tests
        run: yarn run test:ci

      # - name: Commit updated build files
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: Automated publish

      - uses: amondnet/vercel-action@v20 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} # Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} # Required
          working-directory: ./
          vercel-args: "--prod" #Optional
          # github-token: ${{ secrets.GITHUB_TOKEN }} # Optional
